@model NewLetter.Models.InterViewerComment

@using (Html.BeginForm("Newcomments", "Employer", FormMethod.Post, new { id = "msform" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
            @Html.HiddenFor(model=> model.jobID)
            @Html.HiddenFor(model => model.qenID)
            @Html.HiddenFor(model => model.EmployerID)

       
        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedSalaryMonthly, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpectedSalaryMonthly, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpectedSalaryMonthly, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedSalaryGross, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpectedSalaryGross, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpectedSalaryGross, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Candidate_status, "Candidate_status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Candidate_status")
                @Html.ValidationMessageFor(model => model.Candidate_status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" onclick="return NewComment();" /> <span id="msgSaved"></span>
            </div>
        </div>
    </div>
    <input type="hidden" id="result"  value='@ViewBag.result' />
}
<script>
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    }



  function NewComment()
  {
      debugger
      var form = $("#msform").serializeObject();

      debugger
      $.ajax({
          url: 'Newcomments',
          type: 'POST',
          data: form,
          success: function (data) {
              debugger
              if (data == "ok") {
                  document.getElementById('msgSaved').innerHTML = 'Comment saved';
                  oldComments();
              }
              else {
                  document.getElementById('msgSaved').innerHTML = 'Comment not saved';
                
              }
          }
      });
  }
</script>


