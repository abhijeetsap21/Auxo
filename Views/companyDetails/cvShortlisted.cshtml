
@{
    ViewBag.Title = "cvShortlisted";
    Layout = "~/Views/Shared/_Layout_Employer.cshtml";
}

<div class="form-horizontal">
    <h4>CV Shortlisted</h4>
    <div class="col-lg-12 col-md-12 col-xs-12 table-das">
        <div class="table-responsive">



            <style type="text/css">
                .bs-example {
                    margin: 20px;
                }

                i {
                    float: right;
                    font-size: 9px;
                }

                .someclass {
                }
            </style>
            @{ var jobid = ViewBag.jobID;}


<script type="text/javascript">
    var jqOld = jQuery.noConflict();
    jqOld(document).ready(function () {
        jqOld("#viewResult").load('@Url.Action("_partialCandidateResultList", "companyDetails", new { jobid })')
          });

    jqOld.fn.serializeObject = function () {
               var o = {};
               var a = this.serializeArray();
               jqOld.each(a, function () {
                   if (o[this.name] !== undefined) {
                       if (!o[this.name].push) {
                           o[this.name] = [o[this.name]];
                       }
                       o[this.name].push(this.value || '');
                   } else {
                       o[this.name] = this.value || '';
                   }
               });
               return o;
           }

    var form ="";
           function searchResult() {
              
               form = jqOld("#msform").serializeObject();
               debugger
               jqOld.ajax({
                   url: 'http://newsletter.qendidate.com/stagingns/companyDetails/candidateSearch/',
                   type: 'POST',
                   data: { 'frm': form,'jobid':@jobid },
                   success: function (data) {
                       debugger
                       jqOld("#viewResult").html(data);
                   }
               });
           }




           var id=1;
           function searchA() {
               id=id+1;             
               var job = @jobid;

               debugger
               var jobtitle = document.getElementById('txtJobTitle').value;
               var city = document.getElementById('locality').value;

               var txtskill = document.getElementById('txtskill').value;
              
               
               var sel = document.getElementById('ddl_update');
               var ddl_update = sel.options[sel.selectedIndex].value;
               if (ddl_update == "") {
                   ddl_update = 0;
               }

               var defaultsearch = document.getElementById('defaultsearch').value;
               debugger
               jqOld.ajax({
                   url: 'http://newsletter.qendidate.com/stagingns/companyDetails/loadMore/',
                   type: 'POST',
                   data:  { 'jobtitle': jobtitle, 'city': city, 'txtskill': txtskill, 'ddl_update':ddl_update,'jobid':job , 'currentPageIndex': id,'defaultsearch':defaultsearch },  
                   success: function (data) {
                       debugger
               
                       $('#myDataTable tbody').append(data);

                   }
               });
        
               var r=  document.getElementById('pagecount').value;
               if( id >= r)
               {
                   var a = document.getElementById('btnmore');
                   a.style.display = "none"
               }
           }


</script>


<script type="text/javascript">
    jqOld(function () {
        debugger
        jqOld("#txtskill")
            .bind("keydown", function (event) {
                if (event.keyCode === jqOld.ui.keyCode.TAB &&
                jqOld(this).data("ui-autocomplete").menu.active) {
                    event.preventDefault();
                }
            })
            .autocomplete({
                minLength: 2,
                source: function( request, response ) {
                    jqOld.getJSON("/stagingns/jobDetails/select_fillSkills", {
                        term: extractLast( request.term )
                    }, response );
                },
                search: function () {
                    // custom minLength
                    var term = extractLast(this.value);
                    if (term.length < 2) {
                        return false;
                    }
                },
                focus: function () {
                    // prevent value inserted on focus
                    return false;
                },
                select: function (event, ui) {
                    var usersIdVal = jqOld("#UsersId").val();
                    usersIdVal += ", " + ui.item.userId;
                    jqOld("#UsersId").val(usersIdVal)

                    var terms = split(this.value);
                    // remove the current input
                    terms.pop();
                    // add the selected item
                    terms.push(ui.item.value);
                    // add placeholder to get the comma-and-space at the end
                    terms.push("");
                    this.value = terms.join(", ");
                    return false;
                }
            });
    });
    function split(val) {
        return val.split(/,\s*/);
    }
    function extractLast(term) {
        return split(term).pop();
    }


            </script>



            @using (Html.BeginForm("cvShortlisted", "companyDetails", FormMethod.Post, new { id = "msform" }))
            {
                
				<div class="col-md-12 col-sm-12 col-xs-12 dashboard">
                <div class="row">
                    <div class="col-md-3 padding-none flex">
                        <label>Job Title</label><input type="text" value="" name="txt_JobTitle" id="txtJobTitle" />
                    </div>

                    <div class="col-md-3 padding-none flex">
                        <label>Skills</label><input type="text" value="" id="txtskill" name="txtskill" />
                    </div>

                    @*@Html.Hidden("UsersId")*@
                    <div class="col-md-3 padding-none flex">
                        <label>City</label>@Html.TextBox("city", null, new { id = "locality", onFocus = "geolocate()" })
                    </div>


                    <div class="col-md-2 padding-none flex">
                        <label>Exp.</label>
                        <select name="ddl_update" id = "ddl_update">
                            <option value="1">1 Month</option>
                            <option value="2">1 Week </option>
                            <option value="3">3 Month</option>
                            <option value="4">6 Month </option>
                            <option value="5">  ALL  </option>

                        </select>
                    </div>
                    <div class="col-md-1 padding-none flex">
                        <input type="button" name="search" class="previous action-button" value="Search" onclick="return searchResult();" />
                    </div>
                </div>
				</div>

                <div class="row">
                    <div class="col-md-12 auxo-cv" id="viewResult">
                    </div>
                </div>


            }
        </div>
    </div>
</div>


<script>
    // This example displays an address form, using the autocomplete feature
    // of the Google Places API to help users fill in the information.

    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
    jQuery(document).ready(function () {
        initAutocomplete();
    });
    var placeSearch, autocomplete;
    var componentForm = {
        locality: 'long_name'

    };

    function initAutocomplete() {
        debugger
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete((document.getElementById('locality')), { autocomplete: ['geocode'] });
        /** type {!HTMLInputElement} */


        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
        debugger
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
            document.getElementById(component).disabled = false;
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            debugger
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                debugger
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;

            }
        }

    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {

        if (navigator.geolocation) {

            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                debugger
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
</script>



<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyDGhqKFgJrrhrXFGFHRzuPJ84hK7GbtAno"></script>

<script>
    function proceedComm() {
        debugger

        var arr = []
        var x = document.getElementById("myDataTable").rows.length;
       
        for (i = 1 ; i < x ; i++) {

            var id = "item_qencategory_" + i;
            var qenID="qen_"+i;
            var qenid = document.getElementById(qenID).value;
            var hdnFld = document.getElementById(id).value;
            arr.push([qenid,hdnFld]);
        }


        $.ajax({
            type: 'post',
            url: '@Url.Action("saveToOrionComm", "companyDetails")',
            data: JSON.stringify({ searchmodel: arr, jobid : @jobid }),
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                debugger
                if (data != "no") {
                    debugger
                    var URL = '@Url.Action("category", "Employer")?jobID=' + data;
                    window.location.href = URL;
                }
            }
        });

    }
</script>
