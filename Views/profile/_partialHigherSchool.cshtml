@model NewLetter.Models.qenHigherSecondary

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>HigherSecondary</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              

        <div class="form-group">
            @Html.LabelFor(model => model.schoolName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.schoolName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.schoolName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hSecondaryPassYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownListFor(model => model.hSecondaryPassYear, new SelectList(ViewBag.years, "Value", "Text"), "Year", new { @id = "yearselect" })
                @Html.ValidationMessageFor(model => model.hSecondaryPassYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hsecondaryGradeOrPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownListFor(model => model.hsecondaryGradeOrPercentage, new SelectList(ViewBag.grades, "Value", "Text"), "Grade / Percentage", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hsecondaryGradeOrPercentage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hSecondaryBoard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">             
                @Html.DropDownListFor(model => model.hSecondaryBoard, new SelectList(ViewBag.boardNames, "Value", "Text"), "Board", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hSecondaryBoard, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hSecondaryStream, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.hSecondaryStream, new SelectList(ViewBag.streams,"Value","Text"),"Stream",new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hSecondaryStream, "", new { @class = "text-danger" })
            </div>
        </div> 
              

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control",@id = "city" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    var input = document.getElementById('city');
      var autocomplete = new google.maps.places.Autocomplete(input);
</script>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
