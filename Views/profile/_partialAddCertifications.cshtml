@model NewLetter.Models.qendidatePHD


@using (Html.BeginForm("SavePhdInfo", "profile", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.phdid)
    @Html.HiddenFor(m => m.qenID)



    <div class="col-md-12 col-sm-12 margin-20">
        <div class="col-md-6 col-sm-12">
            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label for="concept" class="col-md-6 col-sm-6 col-xs-12 control-label">Certificate Name:</label>
                    <div class="col-md-6 col-sm-6 col-xs-12 padding-none">
                        @Html.TextBoxFor(m => m.courseField, new { maxlength = "100" })
                        @Html.ValidationMessageFor(model => model.courseField, "", new { @class = "col_1 tleft text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label for="concept" class="col-md-6 col-sm-6 col-xs-12 control-label">Certificate Authority:</label>
                    <div class="col-md-6 col-sm-6 col-xs-12 padding-none">
                        @Html.TextBoxFor(m => m.collegeUniversity, new { maxlength = "100" })
                        @Html.ValidationMessageFor(model => model.collegeUniversity, "", new { @class = "col_1 tleft text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label for="concept" class="col-md-6 col-sm-6 col-xs-12 control-label">Licence Number:</label>
                    <div class="col-md-6 col-sm-6 col-xs-12 padding-none">
                        @Html.TextBoxFor(m => m.phdTitle, new { maxlength = "100" })
                        @Html.ValidationMessageFor(model => model.phdTitle, "", new { @class = "col_1 tleft text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-sm-12">
            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label for="concept" class="col-md-6 col-sm-6 col-xs-12 control-label">Start Date:</label>
                    <div class="col-md-6 col-sm-6 col-xs-12 padding-none">
                        @Html.TextBoxFor(m => m.phdStart, "{0:MM/dd/yyyy}", new { @class = "datepicker", onchange = "return DateCheck1();" })
                        @Html.ValidationMessageFor(model => model.phdStart, "", new { @class = "col_1 tleft text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label for="concept" class="col-md-6 col-sm-6 col-xs-12 control-label">End Date:</label>
                    <div class="col-md-6 col-sm-6 col-xs-12 padding-none">
                        @Html.TextBoxFor(m => m.phdEnd, "{0:MM/dd/yyyy}", new { @class = "datepicker", onchange = "return DateCheck1();" })
                        @Html.ValidationMessageFor(model => model.phdEnd, "", new { @class = "col_1 tleft text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-sm-12">
                <div class="form-group">
                    <label for="concept" class="col-md-6 col-sm-6 col-xs-12 control-label">Remarks:</label>
                    <div class="col-md-6 col-sm-6 col-xs-12 padding-none">
                        @Html.TextBoxFor(m => m.phdRemarks, new { maxlength = "100" })
                        @Html.ValidationMessageFor(model => model.phdRemarks, "", new { @class = "col_1 tleft text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 text-right academic">
                @{ 
                    if (Model.phdid == 0)
                    {
                <input type="submit" name="save" class="plus-btn academic-create-btn btn btn-default" value="Save" />
                    }
                    else
                    {
                        <input type="submit" name="save" class="plus-btn academic-create-btn btn btn-default" value="Update" />
                    }
                }
            </div>
        </div>
    </div>

        <br /><br /><br />
        }
<script>
    var jold = jQuery.noConflict();
    jold(document).ready(function () {

        jold('.datepicker').datepicker({
            dateFormat: 'mm/dd/yy'  // CHANGE DATE FORMAT.
        });
    });
</script>

        <script type="text/javascript">

            function DateCheck1() {
                debugger
                var StartDate = document.getElementById('phdStart').value;
                var EndDate = document.getElementById('phdEnd').value;
                //if (StartDate != '')
                //{ var sDate = convertToDate(StartDate); }
                //if (StartDate != '') {
                //    var eDate = convertToDate(EndDate);&& sDate > eDate
                //}

                if (StartDate != '' && EndDate != '' && StartDate > EndDate) {
                    debugger
                    bootbox.alert({
                        title: 'Alert Success  !',
                        message: 'Please ensure that the End Date is greater than or equal to the Start Date.'
                    });

                    return false;
                }
            }
        </script>
        <script>
            function convertToDate(str) {
                debugger
                var dd = str.substring(0, 2);
                var mm = str.substring(3, 5);
                var yy = str.substring(6, 11);
                var dat = mm + "/" + dd + "/" + yy;
                var dt = new Date(dat);
                return dt;
            }

        </script>
