@model NewLetter.Models.EmployerDetail
@using NewLetter.Models;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout_Employer.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Employer Detail</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployerID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        @{var roleID = BaseUtil.RoleID();
            if (roleID == "1" || roleID == "2")
            {
            <div class="form-group">
                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isActive)
                      
                    </div>
                </div>
            </div>
           }
           else
           {
            @Html.HiddenFor(model => model.isActive)

           }
    }



      @Html.HiddenFor(model => model.companyID)@Html.HiddenFor(model => model.isDelete)@Html.HiddenFor(model => model.roleID)@Html.HiddenFor(model => model.dataIsCreated)@Html.HiddenFor(model => model.password)  

      

      

        <div class="form-group">
            <div class="col-md-12 text-right">
                @Html.ActionLink("Back to List", "Index", "", new { @class="btn btn-default"})
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

