@using NewLetter
@using NewLetter.Models;
@model IEnumerable<NewLetter.Models.sp_searchjob_Result>

 


@{  var roleID = BaseUtil.RoleID(); var loginID = BaseUtil.GetSessionValue(AdminInfo.UserID.ToString()); int totalpages = Convert.ToInt32(ViewBag.totalpages);}
<div class="form-horizontal edit-candidate-cv">
<div class="div_table table-responsive">
    <table id="MyTable" class="table table-striped table-bordered table-hover col-md-12 display">
        <thead>
            <tr><td>y</td></tr></thead>
        <tbody id="frst">
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    <div class="bs-example">
                        <div class="media">
                           
                            <div class="media-body">
                                <h4>@item.CompanyName <small><i>Posted on @item.dataIsCreated.ToString("dd/MM/yyyy")</i></small></h4>
                                <p>@item.jobTitle</p>
                                <div class="col-sm-12 job-table">

                                    <table style="width:auto">
                                        <tr>
                                            <td>Openings : </td>
                                            <td>@item.NoOfOpenings<b>|</b></td>

                                            <td>Work Experience : </td>
                                            @{ string exp = "";
                                                if (@item.workExpMin == 0)
                                                {
                                                    exp = "Fresher";
                                                }
                                                else { exp = @item.workExpMin + "year"; }
                                            }
                                            <td>@exp<b>|</b></td>
                                            <td>Location : </td>
                                            <td>@item.city<b>|</b></td>

                                            <td>Education : </td>
                                            <td>@item.EducationReq<b>|</b></td>

                                            <td>Industry : </td>
                                            <td>@item.industryName</td>
                                        </tr>
                                    </table>
                                </div>
                                <div class="col-md-12 job-table des-job">
                                    <div class="col-sm-1 padding-none">Description:</div>
                                    <div class="col-sm-11 padding-none">@Html.Raw(item.jobDescription)</div>
                                </div>
                                <div class="col-md-12 padding-none flex-btn">
                                    <div class="col-sm-6">
                                        <div class="col-sm-1 padding-none jobTitle"> Skills : </div>
                                        <div class="col-sm-11 padding-none jobTitle">  @item.skillset</div>
                                    </div>
                                    <div class="col-sm-6 view-candi text-right">
                                        @{if (@roleID == "1" || @roleID == "2" || @roleID == "3" || @roleID == "4")
                                            {
                                                <input type="button" name="Edit" class="previous action-button" value="Edit" onclick="location.href='@Url.Action("NewJob", "jobDetails", new { jobID = @item.jobID })'" />
                                                <input type="button" name="Candidates" class="previous action-button" value="Candidates " onclick="location.href='@Url.Action("cvShortlisted", "companyDetails", new { jobID = @item.jobID })'" />
                                                var pass = BaseUtil.encrypt(BaseUtil.GetSessionValue(AdminInfo.password.ToString()));
                                                var email = BaseUtil.encrypt(BaseUtil.GetSessionValue(AdminInfo.EmailID.ToString()));


                                                <input type="button" name="Auxopass" class="previous action-button" value="Auxo Pass" onclick="location.href = 'https://spotaneedle.com/Login.aspx?uid=' + @email + '&key='+ @pass" />
                                            }
                                        }
                                        @Html.ActionLink("View", "JobView", "jobDetails", new { jobID = BaseUtil.encrypt(@item.jobID.ToString()) }, null)
                                        <a href="#"onclick="return callApply(@item.jobID);">Apply Now</a>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>

                </td>
            </tr>
              }
        </tbody>
    </table>
   @{ if (Model != null)
       {
        <div class="col-md-12 text-right academic job">
            <input type="button" onclick="return searchA();" value="See More JObs" id="btnmore" class="academic-create-btn btn btn-default" />
            <input type="hidden" id="pagecount" value='@totalpages' />
        </div>
       }
}

        </div>
</div>


<script> 
    var jqOld = jQuery.noConflict();
    jqOld(document).ready(function () {
        jqOld('#MyTable').DataTable({
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    var select = jqOld('<select><option value=""></option></select>')
                        .appendTo(jqOld(column.footer()).empty())
                        .on('change', function () {
                            var val = jqOld.fn.dataTable.util.escapeRegex(
                                jqOld(this).val()
                            );
                            //to select and search from grid  
                            column
                                .search(val ? '^' + val + 'jqOld' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            }
        });
    });
</script>

<script>
    function callApply(jobID)
    {
        debugger      
    
    
        {
            var URL = '@Url.Action("Apply", "jobDetails")?jobID=' + jobID;
        $.get(URL, function (data) {


             debugger
             if (data == "login") {
                bootbox.confirm({
                     title: "Alert Warning  !",
                     message: '<p>Please login to apply this job.</p>',
                     buttons: {
                            confirm: {
                                label: 'Yes',
                                className: 'btn-success'

                            },
                            cancel: {
                                label: 'No',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result,URL) {
                              if(result)
                              {
                                  debugger
                                 var URL = '/Account/login';
                                  location.href = URL;

                              }
                           else
                            {
                            @*debugger
                            var URL = window.location.href;
                            location.href = URL;*@
                         }
                        }

                 })

             }
             if (data == "alreadyApplied") {

                 bootbox.alert({
                  title: "Alert Warning  !",
                  message: '<p>You have already applied at this job.</p>'
              });
             }
             if (data == "access") {

                 bootbox.alert({
                     title: "Alert Warning  !",
                     message: '<p>You are not authorised to apply this job.</p>'
                 });
             }
             if (data == "mail sent and applied") {
                 $('div.alert').addClass("alert-success"); $("#divmsg").css("display", "block");
                 $("#divmsg").html("You have applied successfuly to this job.");
                 bootbox.alert({
                  title: "Alert Success  !",
                  message: '<p>You have applied successfuly to this job.</p>'
              });

             }

         }
     );
    }
    }




</script>